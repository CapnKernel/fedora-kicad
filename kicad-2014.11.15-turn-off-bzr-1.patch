--- kicad-2014.11.15/CMakeModules/download_boost.cmake.orig	2014-11-15 20:49:45.273560802 +1100
+++ kicad-2014.11.15/CMakeModules/download_boost.cmake	2014-11-15 21:10:25.008476029 +1100
@@ -203,17 +203,17 @@
     # Revert the branch to pristine before applying patch sets as bzr patch
     # fails when applying a patch to the branch twice and doesn't have a switch
     # to ignore previously applied patches
-    PATCH_COMMAND   bzr revert
+    PATCH_COMMAND   echo mock bzr revert
         # bzr revert is insufficient to remove "added" files:
-        COMMAND     bzr clean-tree -q --force
+        COMMAND     echo mock bzr clean-tree -q --force
 
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_minkowski.patch"
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_cstdint.patch"
 
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_macosx_x86.patch"        #https://svn.boost.org/trac/boost/ticket/8266
         # tell bzr about "added" files by last patch:
-        COMMAND     bzr add libs/context/src/asm/jump_i386_x86_64_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/make_i386_x86_64_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_i386_x86_64_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/make_i386_x86_64_sysv_macho_gas.S
 
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_macosx_x86_build.patch"  #https://svn.boost.org/trac/boost/ticket/8266
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_macosx_older_openssl.patch"  #https://svn.boost.org/trac/boost/ticket/9273
@@ -222,20 +222,20 @@
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/boost_mingw64_interlocked.patch"
 
         # tell bzr about "added" files by last patch:
-        COMMAND     bzr add libs/context/src/asm/make_i386_ms_pe_gas.S
-        COMMAND     bzr add libs/context/src/asm/jump_i386_ms_pe_gas.S
-        COMMAND     bzr add libs/context/src/asm/make_x86_64_ms_pe_gas.S
-        COMMAND     bzr add libs/context/src/asm/jump_x86_64_ms_pe_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/make_i386_ms_pe_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_i386_ms_pe_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/make_x86_64_ms_pe_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_x86_64_ms_pe_gas.S
 
         COMMAND     ${PATCH_STR_CMD} "${PROJECT_SOURCE_DIR}/patches/patch_macosx_context_ppc_v2.patch" #https://svn.boost.org/trac/boost/ticket/8266
-        COMMAND     bzr add libs/context/build/Jamfile.v2
-        COMMAND     bzr add libs/context/build/architecture.jam
-        COMMAND     bzr add libs/context/src/asm/jump_combined_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/jump_ppc32_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/jump_ppc64_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/make_combined_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/make_ppc32_sysv_macho_gas.S
-        COMMAND     bzr add libs/context/src/asm/make_ppc64_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/build/Jamfile.v2
+        COMMAND     echo mock bzr add libs/context/build/architecture.jam
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_combined_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_ppc32_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/jump_ppc64_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/make_combined_sysv_macho_gas.S
+        COMMAND     echo mock bzr add libs/context/src/asm/make_ppc32_sysv_macho_gas.S
+        COMMAND     echo mock echo mock bzr add libs/context/src/asm/make_ppc64_sysv_macho_gas.S
 
     # [Mis-]use this step to erase all the boost headers and libraries before
     # replacing them below.
@@ -298,7 +298,8 @@
 
 
 ExternalProject_Add_Step( boost bzr_commit_boost
-    COMMAND bzr ci -q -m pristine <SOURCE_DIR>
+    # COMMAND bzr ci -q -m pristine <SOURCE_DIR>
+    COMMAND echo mock bzr ci -q -m pristine <SOURCE_DIR>
     COMMENT "committing pristine boost files to 'boost scratch repo'"
     DEPENDERS patch
     )
@@ -306,14 +307,16 @@
 
 ExternalProject_Add_Step( boost bzr_add_boost
     # add only the headers to the scratch repo, repo = "../.bzr" from ${headers_src}
-    COMMAND bzr add -q ${PREFIX}/src/boost
+    # COMMAND echo mock bzr add -q ${PREFIX}/src/boost
+    COMMAND echo mock echo mock bzr add -q ${PREFIX}/src/boost
     COMMENT "adding pristine boost files to 'boost scratch repo'"
     DEPENDERS bzr_commit_boost
     )
 
 
 ExternalProject_Add_Step( boost bzr_init_boost
-    COMMAND bzr init -q <SOURCE_DIR>
+    # COMMAND bzr init -q <SOURCE_DIR>
+    COMMAND echo mock bzr init -q <SOURCE_DIR>
     COMMENT "creating 'boost scratch repo' specifically for boost to track boost patches"
     DEPENDERS bzr_add_boost
     DEPENDEES download
